Orig.mat is the complete MNIST dataset. Contains 70000 samples. It contains two variables, 'fea' and 'gnd', Each row of 'fea' is a sample; 'gnd' is the label. You can freely divide the number of samples in the train set and test set. It can be loadded with the following python code:

from scipy.io import loadmat
MNIST = loadmat('Orig.mat')
fea = MNIST['fea']
gnd = MNIST['gnd']

2k2k.mat is a data set composed of four thousand samples drawn from Mnist, which contains variables 'fea', 'gnd', 'trainIdx' and 'testIdx'. Each row of 'fea' is a sample; 'gnd' is the label. 'trainIdx' and 'testIdx' each contain 2000 sample labels. It can be loadded with the following python code:

from scipy.io import loadmat
_2k2k = loadmat('2k2k.mat')
trainIdx = _2k2k['trainIdx'].ravel() - 1
testIdx = _2k2k['testIdx'].ravel() - 1
train_data = _2k2k['fea'][trainIdx]
train_index = _2k2k['gnd'][trainIdx]
test_data = _2k2k['fea'][testIdx]
test_index = _2k2k['gnd'][testIdx]

Attention:
1.The expression _2k2k['trainIdx'].ravel() - 1 is used to adapt to Python indexing, which starts from 0.
2.In the file "Orig.mat", the data is not sorted in numerical order.
3.After loading the data from "2k2k.mat" using the provided Python code, train_data and test_data contain digits sorted in numerical order. However, the number of samples for each type of digit is not equal. For example, the number 0 has 191 samples, and the number 1 has 220 samples in the train set.
